'use strict';

/*
 * Scope - —ç—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —Ñ—É–Ω–∫—Ü–∏–π –∏ –æ–±—ä–µ–∫—Ç–æ–≤
 * –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
 *
 * –ü—Ä–∏–Ω—Ü–∏–ø –Ω–∞–∏–º–µ–Ω—å—à–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞.
 *
 * –í —á–µ–º —Å–º—ã—Å–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
 * –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ –≤—Å–µ–º –¥–∞–Ω–Ω—ã–º –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –∫–æ–¥–∞? –û–¥–Ω–æ –∏–∑
 * –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
 * –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –ù–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏
 * –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –∫ —Ç–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∫–æ—Ç–æ—Ä—ã–µ –∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã.
 *
 * Scope —Ç–∞–∫–∂–µ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è, –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å
 * –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º, –Ω–æ –≤ —Ä–∞–∑–Ω—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö –≤–∏–¥–∏–º–æ—Å—Ç–∏.
 *
 * –í JavaScript –µ—Å—Ç—å –¥–≤–∞ —Ç–∏–ø–∞ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏: –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∏ –ª–æ–∫–∞–ª—å–Ω–∞—è.
 * –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –µ–µ
 * –ª–æ–∫–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ,
 * –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.
 *
 * –ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏.
 */

/**
 * Context
 *
 * –ú–Ω–æ–≥–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —á–∞—Å—Ç–æ –ø—É—Ç–∞—é—Ç –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç.
 * –ú–æ–∂–Ω–æ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ this —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ–π
 * –∏–∑ —Å–∞–º—ã—Ö –∑–∞–ø—É—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–µ–π JavaScript. –ú–Ω–æ–≥–∏–µ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏,
 * –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç this –º–µ—Ç–æ–¥–æ–º –Ω–∞—É—á–Ω–æ–≥–æ —Ç—ã–∫–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —Å–∫—Ä–∏–ø—Ç
 * –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç. ü§¶‚Äç
 *
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤ JavaScript –ø–æ—Ö–æ–∂ –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏:
 *
 * ¬´–ü–µ—Ç—è –±–µ–∂–∏—Ç –±—ã—Å—Ç—Ä–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –ü–µ—Ç—è –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–π–º–∞—Ç—å –ø–æ–µ–∑–¥.¬ª
 *
 * ¬´–ü–µ—Ç—è –±–µ–∂–∏—Ç –±—ã—Å—Ç—Ä–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–π–º–∞—Ç—å –ø–æ–µ–∑–¥.¬ª
 *
 * –ü—Ä–µ–¥–º–µ—Ç–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –ü–µ—Ç—è, –∏ –º—ã –º–æ–∂–µ–º —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç
 * –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - —ç—Ç–æ –ü–µ—Ç—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è –≤ —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ
 * –≤—Ä–µ–º—è –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏. –î–∞–∂–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ ¬´–∫—Ç–æ¬ª –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ü–µ—Ç–µ.
 *
 * –ò —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –º—ã –º–æ–∂–µ–º –∏–º–µ—Ç—å –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—É—â–∏–º
 * –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏.
 */

// const petya = {
//   name: 'Petya',
//   showName() {
//     console.log(petya.name);
//   }
// };

// petya.showName();

/**
 * –í–æ-–ø–µ—Ä–≤—ã—Ö, –Ω–∞–¥–æ –∑–Ω–∞—Ç—å, —á—Ç–æ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ JavaScript –∏–º–µ—é—Ç —Å–≤–æ–π—Å—Ç–≤–∞,
 * —Ç–∞–∫ –∂–µ –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã –∏–º–µ—é—Ç —Å–≤–æ–π—Å—Ç–≤–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ —ç—Ç–æ —Ç–æ–∂–µ –æ–±—ä–µ–∫—Ç—ã.
 *
 * –ò –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –æ–Ω–∞ –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ this - –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å–æ
 * —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–±—ä–µ–∫—Ç, –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è,
 * –≤ –∫–æ—Ç–æ—Ä–æ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è this. this –≤—Å–µ–≥–¥–∞ —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç.
 *
 * this –Ω–∞–º –Ω—É–∂–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–µ—Ç–æ–¥–∞–º –∏ —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç
 * —Ñ—É–Ω–∫—Ü–∏—é, —Ç–µ–º –±–æ–ª–µ–µ, —á—Ç–æ –º—ã –Ω–µ –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ–º, –∏–º—è –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
 */

// const petya = {
//   name: 'Petya',
//   showName() {
//     console.log(this.name);
//   }
// };

// petya.showName();

/**
 * –í–∞–º –Ω—É–∂–Ω–æ —É—Å–≤–æ–∏—Ç—å –≤—Å–µ–≥–æ –æ–¥–Ω–æ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è this:
 * –∑–Ω–∞—á–µ–Ω–∏–µ this, –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –æ–ø—Ä–µ–¥–µ–ª—è—Ç—Å—è –Ω–µ –≤ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏,
 * –∞ –≤ –º–æ–º–µ–Ω—Ç –µ–µ –≤—ã–∑–æ–≤–∞.
 *
 * –ó–Ω–∞—á–µ–Ω–∏–µ this –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–æ, –∫–∞–∫ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è.
 * –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ –∫–∞–∂–µ—Ç—Å—è –∫–∞–∫ –±—É–¥—Ç–æ this —Å—Å—ã–ª–∞–µ—Ç—Å—è
 * –Ω–∞ –æ–±—ä–µ–∫—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞.
 */

/**
 * –í –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∞–µ—Ç—Å—è
 * –Ω–∞ –æ–±—ä–µ–∫—Ç Window, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ.
 *
 * –ö–æ–≥–¥–∞ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º, –∑–Ω–∞—á–µ–Ω–∏–µ this, –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π
 * –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (–≤ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö),
 * –±—É–¥–µ—Ç undefined.
 */

// function a() {
//   console.log(this);
// }

// a();

/**
 * –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –∫–∞–∫ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞, —Ç–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç
 * –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç, —á–∞—Å—Ç—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥.
 */

// const petya = {
//   name: 'Petya',
//   showName() {
//     console.log(this.name);
//   }
// };

// petya.showName();

// function showName() {
//   console.log('this inside showName: ', this);
//   console.log(this.name);
// }

// const user = {
//   name: 'Mango'
// };

// user.show = showName;

// user.show();

/**
 * this –≤ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
 */

// const showName = () => console.log('inside showName: ', this);

// const user = {
//   name: 'Mango'
// };

// user.show = showName;

// user.show();

/**
 * this —Ñ—É–Ω–∫—Ü–∏—è—Ö –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
 *
 * –ö–æ–≥–¥–∞ –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –º–µ—Ç–æ–¥ (–∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç this) –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞,
 * –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞,
 * –º—ã –ø–æ–ª—É—á–∏–º –ø—Ä–æ–±–ª–µ–º—É.
 */

// const user = {
//   name: 'Mango',
//   showName() {
//     console.log(this.name);
//   }
// };

// function a(callback) {
//   callback();
// }

// a(user.showName);

// function User(name) {
//   this.name = name;
// }

// const user_1 = new User('Mango');
// console.log(user_1);

// const user_2 = new User('Poly');
// console.log(user_2);

/**
 * –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: call, apply, bind
 */

// const manager_1 = {
//   name: 'manager_1',
//   sales: 10
// };

// const manager_2 = {
//   name: 'manager_2',
//   sales: 15
// };

// function addSales(val, a, b, c) {
//   console.log(a, b, c);
//   this.sales += val;
// }

// addSales.call(context, arg1, arg2, arg3);
// console.log(manager_1);
// addSales.call(manager_1, 30, 1, 2, 3);
// console.log(manager_1);

// console.log(manager_2);
// addSales.call(manager_2, 30);
// console.log(manager_2);

// addSales.apply(context, [arg1, arg2, arg3]);
// console.log(manager_1);
// addSales.apply(manager_1, [30, 4, 1, 8]);
// console.log(manager_1);

// const addSalesWithContext = addSales.bind(manager_1, 10, 6, 4, 9);

// console.log(manager_1);
// addSalesWithContext();
// console.log(manager_1);

/**
 * Closure (–∑–∞–º—ã–∫–∞–Ω–∏–µ)
 * –ó–∞–º—ã–∫–∞–Ω–∏–µ —ç—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å
 * —Å–≤–æ–µ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –≤ –Ω–µ–º,
 * –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∞ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤–Ω–µ —ç—Ç–æ–≥–æ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
 */

// function a() {
//   const x = 1;

//   return function() {
//     console.log(x);
//   };
// }

// const b = a();

// b();

// function protectedCounter() {
//   let counter = 0;

//   return function() {
//     console.log(counter++);
//   };
// }
// const counter_1 = protectedCounter();
// const counter_2 = protectedCounter();

// counter_1();
// counter_1();
// counter_1();
// counter_1();

// counter_2();
// counter_2();
// counter_2();

/**
 * this –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏
 */

// const users = ['Mango', 'Poly', 'Ajax'];

// for (var i = 0; i < users.length; i += 1) {
//   (function(index) {
//     setTimeout(params => console.log(users[index]), 1000);
//   })(i);
// }

// const users = ['Mango', 'Poly', 'Ajax'];

// users.forEach(user => {
//   console.log(user);
//   console.log(this);
// });

/**
 * IIFE
 */

// (function() {
//   // logic here
// })();

// Named function declaration
// function myFunction() {
//   /* logic here */
// }

// // Assignment of a function expression to a variable
// var myFunction = function() {
//   /* logic here */
// };

// Anything within the parentheses is part of an expression
// (function() {
//   console.log('hello');
// })();

// (function() {
//   const x = 5;
// })();

// (function(val) {
//   console.log(val);
// })(1231235);

// const x = {
//   b: 10
// };

// function a(obj) {
//   obj = null;
// }

// a(x);

// console.log(x);
